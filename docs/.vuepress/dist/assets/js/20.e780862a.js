(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{269:function(t,a,r){"use strict";r.r(a);var e=r(38),s=Object(e.a)({},function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"guitarchordpattern"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#guitarchordpattern","aria-hidden":"true"}},[t._v("#")]),t._v(" GuitarChordPattern")]),t._v(" "),r("h2",{attrs:{id:"classes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#classes","aria-hidden":"true"}},[t._v("#")]),t._v(" Classes")]),t._v(" "),r("dl",[r("dt",[r("a",{attrs:{href:"#GuitarChordPattern"}},[t._v("GuitarChordPattern")])]),t._v(" "),r("dd",[r("p",[t._v("This class is used to implement the CAGED chord system in code.\nbasically, it converts a chord of a specific pattern to any other root of the same chord.")])])]),t._v(" "),r("h2",{attrs:{id:"members"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#members","aria-hidden":"true"}},[t._v("#")]),t._v(" Members")]),t._v(" "),r("dl",[r("dt",[r("a",{attrs:{href:"#pattern"}},[t._v("pattern")]),t._v(" ⇒ "),r("code",[t._v("Array")])]),t._v(" "),r("dd",[r("p",[t._v("Returns the chord pattern.")])]),t._v(" "),r("dt",[r("a",{attrs:{href:"#pitchClass"}},[t._v("pitchClass")]),t._v(" ⇒ "),r("code",[t._v("PitchClass")])]),t._v(" "),r("dd",[r("p",[t._v("Returns the chord's pitch class.")])]),t._v(" "),r("dt",[r("a",{attrs:{href:"#name"}},[t._v("name")]),t._v(" ⇒ "),r("code",[t._v("string")])]),t._v(" "),r("dd",[r("p",[t._v("Returns the chord name.")])])]),t._v(" "),r("h2",{attrs:{id:"functions"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#functions","aria-hidden":"true"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),r("dl",[r("dt",[r("a",{attrs:{href:"#getChord"}},[t._v("getChord(root)")]),t._v(" ⇒ "),r("code",[t._v("Object")])]),t._v(" "),r("dd",[r("p",[t._v("Returns a string that represents the strumming pattern for a guitar chord with the new root.")])])]),t._v(" "),r("p",[r("a",{attrs:{name:"GuitarChordPattern"}})]),t._v(" "),r("h2",{attrs:{id:"guitarchordpattern-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#guitarchordpattern-2","aria-hidden":"true"}},[t._v("#")]),t._v(" GuitarChordPattern")]),t._v(" "),r("p",[t._v("This class is used to implement the CAGED chord system in code.\nbasically, it converts a chord of a specific pattern to any other root of the same chord.")]),t._v(" "),r("p",[r("strong",[t._v("Kind")]),t._v(": global class"),r("br"),t._v(" "),r("a",{attrs:{name:"new_GuitarChordPattern_new"}})]),t._v(" "),r("h3",{attrs:{id:"new-guitarchordpattern-pattern-pitchclass-name"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#new-guitarchordpattern-pattern-pitchclass-name","aria-hidden":"true"}},[t._v("#")]),t._v(" new GuitarChordPattern(pattern, pitchClass, name)")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("Param")]),t._v(" "),r("th",[t._v("Type")]),t._v(" "),r("th",[t._v("Description")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("pattern")]),t._v(" "),r("td",[r("code",[t._v("Array")])]),t._v(" "),r("td",[t._v("The chords pattern.")])]),t._v(" "),r("tr",[r("td",[t._v("pitchClass")]),t._v(" "),r("td",[r("code",[t._v("PitchClass")])]),t._v(" "),r("td",[t._v("The chord's root pitch class.")])]),t._v(" "),r("tr",[r("td",[t._v("name")]),t._v(" "),r("td",[r("code",[t._v("string")])]),t._v(" "),r("td",[t._v("The chords name.")])])])]),t._v(" "),r("p",[r("a",{attrs:{name:"pattern"}})]),t._v(" "),r("h2",{attrs:{id:"pattern-⇒-array"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pattern-⇒-array","aria-hidden":"true"}},[t._v("#")]),t._v(" pattern ⇒ "),r("code",[t._v("Array")])]),t._v(" "),r("p",[t._v("Returns the chord pattern.")]),t._v(" "),r("p",[r("strong",[t._v("Kind")]),t._v(": global variable"),r("br"),t._v(" "),r("a",{attrs:{name:"pitchClass"}})]),t._v(" "),r("h2",{attrs:{id:"pitchclass-⇒-pitchclass"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pitchclass-⇒-pitchclass","aria-hidden":"true"}},[t._v("#")]),t._v(" pitchClass ⇒ "),r("code",[t._v("PitchClass")])]),t._v(" "),r("p",[t._v("Returns the chord's pitch class.")]),t._v(" "),r("p",[r("strong",[t._v("Kind")]),t._v(": global variable"),r("br"),t._v(" "),r("a",{attrs:{name:"name"}})]),t._v(" "),r("h2",{attrs:{id:"name-⇒-string"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#name-⇒-string","aria-hidden":"true"}},[t._v("#")]),t._v(" name ⇒ "),r("code",[t._v("string")])]),t._v(" "),r("p",[t._v("Returns the chord name.")]),t._v(" "),r("p",[r("strong",[t._v("Kind")]),t._v(": global variable"),r("br"),t._v(" "),r("a",{attrs:{name:"getChord"}})]),t._v(" "),r("h2",{attrs:{id:"getchord-root-⇒-object"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#getchord-root-⇒-object","aria-hidden":"true"}},[t._v("#")]),t._v(" getChord(root) ⇒ "),r("code",[t._v("Object")])]),t._v(" "),r("p",[t._v("Returns a string that represents the strumming pattern for a guitar chord with the new root.")]),t._v(" "),r("p",[r("strong",[t._v("Kind")]),t._v(": global function")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("Param")]),t._v(" "),r("th",[t._v("Type")]),t._v(" "),r("th",[t._v("Description")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("root")]),t._v(" "),r("td",[r("code",[t._v("PitchClass")])]),t._v(" "),r("td",[t._v("The root of the chord.")])])])])])},[],!1,null,null,null);a.default=s.exports}}]);