(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{273:function(t,a,e){"use strict";e.r(a);var n=e(38),r=Object(n.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"musicfunctions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#musicfunctions","aria-hidden":"true"}},[t._v("#")]),t._v(" MusicFunctions")]),t._v(" "),e("h2",{attrs:{id:"functions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#functions","aria-hidden":"true"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),e("dl",[e("dt",[e("a",{attrs:{href:"#toPianoChord"}},[t._v("toPianoChord({pitchClasses}, octave)")]),t._v(" ⇒ "),e("code",[t._v("Array")])]),t._v(" "),e("dd",[e("p",[t._v("Generates a group of notes that represent chord played on a piano in a certain octave.")])]),t._v(" "),e("dt",[e("a",{attrs:{href:"#calculateInterval"}},[t._v("calculateInterval(pitchClass1, pitchClass2)")]),t._v(" ⇒ "),e("code",[t._v("Number")])]),t._v(" "),e("dd",[e("p",[t._v("Calculate the pure interval between 2 pitch classes.")])]),t._v(" "),e("dt",[e("a",{attrs:{href:"#noteToObject"}},[t._v("noteToObject(pitch)")]),t._v(" ⇒ "),e("code",[t._v("Object")])]),t._v(" "),e("dd",[e("p",[t._v("Turns a note into an object with pitch class and octave.")])]),t._v(" "),e("dt",[e("a",{attrs:{href:"#notesInRange"}},[t._v("notesInRange(base, range)")])]),t._v(" "),e("dd",[e("p",[t._v("Returns an object where the keys are raw notes and their value is an instance of that note.")])])]),t._v(" "),e("p",[e("a",{attrs:{name:"toPianoChord"}})]),t._v(" "),e("h2",{attrs:{id:"topianochord-pitchclasses-octave-⇒-array"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#topianochord-pitchclasses-octave-⇒-array","aria-hidden":"true"}},[t._v("#")]),t._v(" toPianoChord({pitchClasses}, octave) ⇒ "),e("code",[t._v("Array")])]),t._v(" "),e("p",[t._v("Generates a group of notes that represent chord played on a piano in a certain octave.")]),t._v(" "),e("p",[e("strong",[t._v("Kind")]),t._v(": global function")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Param")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("{pitchClasses}")]),t._v(" "),e("td",[e("code",[t._v("Array")])]),t._v(" "),e("td",[t._v("An object with a pitch classes key that holds an array of pitch classes, or simple an     instance of chord")])]),t._v(" "),e("tr",[e("td",[t._v("octave")]),t._v(" "),e("td",[e("code",[t._v("number")])]),t._v(" "),e("td",[t._v("Octave for the chord root.")])])])]),t._v(" "),e("p",[e("a",{attrs:{name:"calculateInterval"}})]),t._v(" "),e("h2",{attrs:{id:"calculateinterval-pitchclass1-pitchclass2-⇒-number"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#calculateinterval-pitchclass1-pitchclass2-⇒-number","aria-hidden":"true"}},[t._v("#")]),t._v(" calculateInterval(pitchClass1, pitchClass2) ⇒ "),e("code",[t._v("Number")])]),t._v(" "),e("p",[t._v("Calculate the pure interval between 2 pitch classes.")]),t._v(" "),e("p",[e("strong",[t._v("Kind")]),t._v(": global function")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Param")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("pitchClass1")]),t._v(" "),e("td",[e("code",[t._v("PitchClass")])]),t._v(" "),e("td",[t._v("first note")])]),t._v(" "),e("tr",[e("td",[t._v("pitchClass2")]),t._v(" "),e("td",[e("code",[t._v("PitchClass")])]),t._v(" "),e("td",[t._v("second note")])])])]),t._v(" "),e("p",[e("a",{attrs:{name:"noteToObject"}})]),t._v(" "),e("h2",{attrs:{id:"notetoobject-pitch-⇒-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#notetoobject-pitch-⇒-object","aria-hidden":"true"}},[t._v("#")]),t._v(" noteToObject(pitch) ⇒ "),e("code",[t._v("Object")])]),t._v(" "),e("p",[t._v("Turns a note into an object with pitch class and octave.")]),t._v(" "),e("p",[e("strong",[t._v("Kind")]),t._v(": global function")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Param")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("pitch")]),t._v(" "),e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[t._v("Pitch as a string, e.g Ab3")])])])]),t._v(" "),e("p",[e("a",{attrs:{name:"notesInRange"}})]),t._v(" "),e("h2",{attrs:{id:"notesinrange-base-range"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#notesinrange-base-range","aria-hidden":"true"}},[t._v("#")]),t._v(" notesInRange(base, range)")]),t._v(" "),e("p",[t._v("Returns an object where the keys are raw notes and their value is an instance of that note.")]),t._v(" "),e("p",[e("strong",[t._v("Kind")]),t._v(": global function")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Param")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("base")])]),t._v(" "),e("tr",[e("td",[t._v("range")])])])])])},[],!1,null,null,null);a.default=r.exports}}]);